//Integer to English words

public class Main4 {

    private static String Ones(int num){

        switch(num){
            case 1:
                return "One";
            case 2:
                return "Two";
            case 3:
                return "Three";
            case 4:
                return "Four";
            case 5:
                return "Five";
            case 6:
                return "Six";
            case 7:
                return "Seven";
            case 8:
                return "Eight";
            case 9:
                return "Nine";
        }
        return "";
    }

    private static String underTwenty(int num){

        switch(num){
            case 11:
                return "Eleven";
            case 12:
                return "Twelve";
            case 13:
                return "Thirteen";
            case 14:
                return "Fourteen";
            case 15:
                return "Fifteen";
            case 16:
                return "Sixteen";
            case 17:
                return "Seventeen";
            case 18:
                return "Eighteen";
            case 19:
                return "Nineteen";
        }
        return "";
    }

    private static String tens(int num){
        switch (num){
            case 10:
                return "Ten";
            case 20:
                return "Twenty";
            case 30:
                return "Thirty";
            case 40:
                return "Forty";
            case 50:
                return "Fifty";
            case 60:
                return "Sixty";
            case 70:
                return "Seventy";
            case 80:
                return "Eighty";
            case 90:
                return "Ninety";
        }
        return "";
    }
    private static String twoDigits(int num){

        if(num<10) return Ones(num);
        if(num<20) return underTwenty(num);

        int tenthPlace = num/10*10;
        int onesPlace = num%10;

        if(onesPlace==0){
            return tens(tenthPlace);
        }

        return tens(tenthPlace)+ " " +Ones(onesPlace);
    }

    private static String threeDigits(int num){
        int hundredsNums = num/100;
        int rest = num%100;

        if(hundredsNums==0) {
            return twoDigits(rest);
        }

        if(rest==0){
            return Ones(hundredsNums)+" Hundred ";
        }

        return Ones(hundredsNums) +" Hundred "+twoDigits(rest);
    }

    public static String numberToWords(int num) {
        if(num==0) return "Zero";

        int billion = num/1000000000;
        num-=billion*1000000000;
        int million = num/1000000;
        num-=million*1000000;
        int thousand = num/1000;
        num-=thousand*1000;

        String result="";
        if(billion>0){
            result+=(threeDigits(billion)+" Billion ");
        }
        if(million>0){
            result+=(threeDigits(million)+" Million ");
        }
        if(thousand>0){
            result+=(threeDigits(thousand)+" Thousand ");
        }
        if(num>0){
            result+=threeDigits(num);
        }

        return result.strip();
    }
    public static void main(String[] args) {
        int num = 123;
        System.out.print(numberToWords(num));
    }
}
