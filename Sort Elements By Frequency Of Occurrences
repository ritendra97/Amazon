import java.util.Comparator;
import java.util.HashMap;
import java.util.Map;
import java.util.PriorityQueue;

//Sort Elements by Frequency of Occurrences
class ele {
	int val;
	int freq;

	ele(int val, int freq) {
		this.val = val;
		this.freq = freq;
	}
}

public class Main2 {

	public static void Solve(int arr[], int n) {
		
		Map<Integer, Integer> map = new HashMap<Integer, Integer>();
		for (int i = 0; i < n; i++) {
			map.put(arr[i], map.getOrDefault(arr[i], 0) + 1);
		}

		PriorityQueue<ele> pq = new PriorityQueue<>(new Comparator<ele>() {

			public int compare(ele e1, ele e2) {

				if (e1.freq > e2.freq) {
					return -1;
				} else if (e1.freq < e2.freq) {
					return 1;
				} else {
					return e1.val-e2.val;
				}

			}
		});

		
		for(Map.Entry<Integer, Integer> m:map.entrySet()) {
			pq.add(new ele(m.getKey(),m.getValue()));
		}
		
		while(!pq.isEmpty()) {
			ele e = pq.poll();
			System.out.println(e.val+" "+e.freq);
		}
	}

	public static void main(String[] args) {
		int arr[] = { 2, 5, 2, 8, 5, 6, 8, 8 };
		int x = 35;
		int n = arr.length;
		Solve(arr, n);
	}
}
