//Minimum Moves to Equal Array Elements
import java.util.Arrays;
import java.util.HashSet;
import java.util.TreeSet;

public class Main3 {

    public static int minMoves(int arr[]) {

        int count = 0;
        HashSet<Integer> hs = new HashSet<>();

        while (true) {

            boolean flag = true;
            for(int i = 0;i<arr.length-1;i++) {
                if(arr[i]!=arr[i+1]) flag = false;
            }

            if(flag==true) break;

            count++;
            int maxi = maxElement(arr);
            for (int i = 0; i < maxi; i++) {
                arr[i] = arr[i] + 1;
                hs.add(arr[i]);
            }
            for (int i = maxi + 1; i < arr.length; i++) {
                arr[i] = arr[i] + 1;
                hs.add(arr[i]);
            }
        }
        return count;
    }

    public static int maxElement(int arr[]) {
        int max = 0;
        int index = -1;
        for (int i = 0; i < arr.length; i++) {
            if (max < arr[i]) {
                max = arr[i];
                index = i;
            }
        }
        return index;
    }

    public static void main(String[] args) {
        int arr[] = { 3,6,2,4,8,9 };
        System.out.println(minMoves(arr));
    }

}


class Solution {
    public int minMoves(int[] nums) {
         if(nums.length == 0)
            return 0;
        int mn = nums[0];
        for(int i = 0 ; i < nums.length ; i++) {
            mn = Math.min(mn , nums[i]);
        }
        int moves = 0;
        for(int i = 0 ; i < nums.length ; i++) {
            moves += nums[i] - mn;
        }
        return moves;
    }
}
