//Find Four Elements That Sums To A Given Value
//Find Four Elements That Sums To A Given Value

Time Complexity O(n^2)
Space Complexity = O(n)


import java.util.HashMap;
import java.util.Map;

class pair{
    int x;
    int y;

    public pair(int x, int y) {
        this.x = x;
        this.y = y;
    }
}
public class Main3 {


    public static boolean fourSum(int[] arr, int target, int n) {
        Map<Integer,pair> map = new HashMap<>();
        for (int i = 0;i<n;i++){
            for(int j = i+1;j<n;j++){
                map.put(arr[i]+arr[j], new pair(i,j));
            }
        }

        for (int i = 0;i<n;i++){
            for(int j = i+1;j<n;j++){
                int target2 = target-(arr[i]+arr[j]);

                if(map.containsKey(target2) && !commonIndex(new pair(i,j),map.get(target2))) return true;
            }
        }
        return false;
    }
    public static boolean commonIndex(pair p1, pair p2){
        return (p1.y==p2.y || p1.x==p2.x || p1.x==p2.y || p1.y==p2.x);
    }
    public static void main(String[] args){
        int arr[] = {10, 2, 3, 4, 5, 9, 7, 8};
        int target = 85;
        System.out.println(fourSum(arr,target, arr.length));
    }
}
