// Check if an array is stack sortable

import java.util.Arrays;

public class Graph {

	public static void rearrangeArr(int arr[], int n) {

		int evenPos = n / 2;
		int oddPos = n - evenPos;

		int[] tempArr = new int[n];
		for (int i = 0; i < n; i++)
			tempArr[i] = arr[i];

		Arrays.sort(tempArr);
		int j = oddPos - 1;

		for (int i = 0; i < n; i += 2) {
			arr[i] = tempArr[j];
			j--;
		}

		j = oddPos;
		for (int i = 1; i < n; i += 2) {
			arr[i] = tempArr[j];
			j++;
		}

		for (int i = 0; i < n; i++)
			System.out.print(arr[i] + " ");
	}

	public static void main(String argc[]) {
		int[] arr = new int[] { 1, 2, 3, 4, 5, 6, 7 };
		int size = 7;
		rearrangeArr(arr, size);
	}
}


import java.util.Arrays;
import java.util.HashMap;
import java.util.HashSet;

public class Main4 {

    public static void swap(int arr[]){

        boolean flag = true;
        for(int i=0;i<=arr.length-2;i++){

            if(flag){

                if(arr[i]>arr[i+1]){
                    int temp = arr[i];
                    arr[i]  = arr[i+1];
                    arr[i+1] = temp;
                }

            }else{

                if(arr[i]<arr[i+1]){
                    int temp = arr[i];
                    arr[i]  = arr[i+1];
                    arr[i+1] = temp;
                }

            }
            flag =!flag;
        }

        Arrays.stream(arr).forEach(System.out::println);
    }
    public static void main(String[] args){
        int arr[] = {4, 3, 7, 8, 6, 2, 1};
        swap(arr);
    }
}
