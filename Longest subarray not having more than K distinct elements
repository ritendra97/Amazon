//Longest subarray not having more than K distinct elements
import java.util.HashMap;

public class Graph {

	public static void Solution(int arr[], int k) {

		int max = 0;
		HashMap<Integer, Integer> map = new HashMap<>();

		int i = -1;
		int j = 0;

		while (true) {

			boolean f1 = false;
			boolean f2 = false;

			while (i < arr.length-1) {
				
				i++;
				f1 = true;
				map.put(arr[i], map.getOrDefault(arr[i], 0) + 1);
				if (map.size() <= k && max < (i - j + 1)) {
					max = (i - j + 1);
				} else {
					break;
				}
			}

			while (j < i && j < arr.length) {
				
				f2 = true;
				if (map.get(arr[j]) > 1) {
					map.put(arr[j], map.get(arr[j]) - 1);
				} else {
					map.remove(arr[j]);
				}
				j++;
				if (map.size() <= k) {
					if (max < (i - j + 1))
						max = (i - j + 1);
					break;
				}
			}

			if (f1 == false && f2 == false)
				break;
		}
		
		System.out.println(max);
	}

	public static void main(String[] args) {
		int arr[] = { 1, 2, 3, 4, 5 };
		int k = 6;
		Solution(arr, k);
	}
}
