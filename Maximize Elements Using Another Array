import java.util.Arrays;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;

public class Main2 {

	public static void Solve(int arr1[], int arr2[]) {

		int m = arr1.length;
		int n = arr2.length;

		int temp1[] = new int[m];
		int temp2[] = new int[n];

		for (int i = 0; i < arr1.length; i++) {
			temp1[i] = arr1[i];
			temp2[i] = arr2[i];
		}

		Arrays.sort(temp1);
		Arrays.sort(temp2);

		int i = arr1.length - 1;
		int j = arr2.length-1;
		
		Map<Integer, Integer> map = new HashMap<>();

		while (map.size() < m) {

			if (temp2[i] >= temp1[j]) {
				if (map.containsKey(temp2[i])) {
					map.put(temp2[i], map.get(temp2[i]) + 1);
				} else {
					map.put(temp2[i], 1);
				}
				i--;
			} else {
				if (map.containsKey(temp1[j])) {
					map.put(temp1[j], map.get(temp1[j]) + 1);
				} else {
					map.put(temp1[j], 1);
				}
				j--;
			}
		}
		
		int ans[] = new int[n];
		int index = 0;
		for (int k = 0; k < arr2.length; k++) {
			if (map.containsKey(arr2[k]) && map.get(arr2[k]) == 1) {
				ans[index++] = arr2[k];
			}
		}

		for (int k = 0; k < arr1.length; k++) {
			if (map.containsKey(arr1[k]) && map.get(arr1[k]) == 1) {
				ans[index++] = arr1[k];
			}
		}

		Arrays.stream(ans).forEach(System.out::println);
	}

	public static void main(String[] args) {
		int arr1[] = { 9,3,2 };
		int arr2[] = { 6,4,1 };
		Solve(arr1, arr2);
	}
}
