
public class Main2 {

	public static void Solve(int arr[], int n) {
		
		int x = 10;
		int expect_ans = x+1;
		
		int i = 0;
		while(true) {
			
			if(i==n-1) break;
			if(arr[i]==expect_ans) {
				expect_ans = expect_ans+1;
				i=0;
			}
			i++;
		}
		System.out.println(expect_ans);
	}

	public static void main(String[] args) {
		int arr[] = { 1, 5, 10, 4, 7 };
		int n = arr.length;
		Solve(arr, n);
	}
}


import java.util.*;

class GFG
{

// Function to return the smallest element greater
// than x which is not present in a[]
static int Next_greater(int a[], int n, int x)
{

	// Sort the array
	Arrays.sort(a);

	int low = 0, high = n - 1, ans = x + 1;

	// Continue until low is less
	// than or equals to high
	while (low <= high)
	{

		// Find mid
		int mid = (low + high) / 2;

		// If element at mid is less than
		// or equals to searching element
		if (a[mid] <= ans)
		{

			// If mid is equals
			// to searching element
			if (a[mid] == ans)
			{

				// Increment searching element
				ans++;

				// Make high as N - 1
				high = n - 1;
			}

			// Make low as mid + 1
			low = mid + 1;
		}

		// Make high as mid - 1
		else
			high = mid - 1;
	}

	// Return the next greater element
	return ans;
}

// Driver code
public static void main(String[] args)
{
	int a[] = { 1, 5, 10, 4, 7 }, x = 4;
	int n = a.length;

	System.out.println(Next_greater(a, n, x));
}
}

// This code is contributed by PrinciRaj1992
