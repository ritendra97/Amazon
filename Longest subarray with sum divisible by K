import java.io.*;
import java.util.*;

class Solution
{
    int longSubarrWthSumDivByK(int a[], int n, int k)
    {
        HashMap<Integer,Integer> map = new HashMap<Integer,Integer>();
		int sum=0;
		int max_len = 0;
		map.put(0,-1);
		
		for(int i=0;i<a.length;i++)
		{
			sum+=a[i];
			int rem = sum%k;
			if(rem<0)
				rem+=k;
			if(map.containsKey(rem))
			{
				int len = i-map.get(rem);
				if(max_len<len)
					max_len=len;
			}
			else
			{
				map.put(rem, i);
			}
		}
		return max_len;
    }
}

class GFG {
    
    
	public static void main (String[] args) throws IOException{
	
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		
		int testcases = Integer.parseInt(br.readLine());
		
		while(testcases-- > 0){
		    
		    String line1 = br.readLine();
		    String[] element = line1.trim().split("\\s+");
		    int sizeOfArray = Integer.parseInt(element[0]);
		    int K = Integer.parseInt(element[1]);
		    
		    int arr [] = new int[sizeOfArray];
		    
		    String line = br.readLine();
		    String[] elements = line.trim().split("\\s+");
		    
		    for(int i = 0;i<sizeOfArray;i++){
		        arr[i] = Integer.parseInt(elements[i]);
		    }
		    
		    Solution obj = new Solution();
		   
		    int res = obj.longSubarrWthSumDivByK(arr, sizeOfArray, K);
		    
		    System.out.println(res);
		    
		    
		}
	}
}
