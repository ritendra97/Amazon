import java.util.Deque;
import java.util.LinkedList;

public class Main4 {

    public static void maxWindow(int arr[], int k){
        Deque<Integer> dq = new LinkedList<>();

        for(int i = 0;i<k;i++){
            while(!dq.isEmpty() && arr[dq.peekLast()]<=arr[i]){
                dq.removeLast();
            }
            dq.addLast(i);
        }

        for(int i=k;i< arr.length;i++){
            System.out.println(arr[dq.peekFirst()]);

            if(dq.peekFirst()<=i-k){
                dq.removeFirst();
            }
            while(!dq.isEmpty() && arr[dq.peekLast()]<=arr[i]){
                dq.removeLast();
            }
            dq.addLast(i);
        }
        System.out.println(arr[dq.peekFirst()]);
    }
    public static void main(String[] args){
        int arr[] = {8, 5, 10, 7, 9, 4, 15, 12, 90, 13}, K = 4;
        maxWindow(arr,K);
    }
}
