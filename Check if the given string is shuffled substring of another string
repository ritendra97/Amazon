//Check if the given string is shuffled substring of another string
// Time Complexity = O(m*nlogn)
// Space Complexity = O(1)

import java.util.Arrays;
public class Main4{

    public static boolean Solution(String str1, String str2){
        int n = str1.length();
        int m = str2.length();

        if(n>m){
            return false;
        } else{
            str1 = sort(str1);
            for(int i = 0;i< str2.length();i++){
                String subString = str1.substring(i,i+n);
                subString = sort(subString);
                if(str1.equals(subString)) return true;
            }
        }
        return false;
    }

    public static String sort(String str){
        char temp[] = str.toCharArray();
        Arrays.sort(temp);
        return String.valueOf(temp);
    }

    public static void main(String[] args){
        String str1 = "onetwofour";
        String str2 = "hellofourtwooneworld";
        System.out.println(Solution(str1,str2));
    }
}

//Check if the given string is shuffled substring of another string
// Time Complexity = O(m*nlogn)
// Space Complexity = O(1)

import java.util.Arrays;
public class Main4{
    static boolean compare(int []arr1, int []arr2)
    {
        for(int i = 0; i < 256; i++)
            if (arr1[i] != arr2[i])
                return false;

        return true;
    }
    static boolean search(String pat, String txt)
    {
        int M = pat.length();
        int N = txt.length();
        int []countP = new int [256];
        int []countTW = new int [256];
        for(int i = 0; i < 256; i++)
        {
            countP[i] = 0;
            countTW[i] = 0;
        }

        for(int i = 0; i < M; i++)
        {
            (countP[pat.charAt(i)])++;
            (countTW[txt.charAt(i)])++;
        }
        for(int i = M; i < N; i++)
        {

            if (compare(countP, countTW))
                return true;

            (countTW[txt.charAt(i)])++;
            countTW[txt.charAt(i - M)]--;
        }
        
        if (compare(countP, countTW))
            return true;
        return false;
    }
    public static void main(String[] args)
    {
        String txt = "BACDGABCDA";
        String pat = "ABCD";

        if (search(pat, txt))
            System.out.println("Yes");
        else
            System.out.println("NO");
    }
}
