//Maximum sum of absolute difference of any permutation
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class Main4 {

    public static long maximizeSum(int arr[], int n, int k) {

        Arrays.sort(arr);
        int index = 0;
        for(;index<n;index++){
            if(k>0 && arr[index]<0){
                arr[index]*=-1;
                k--;
                continue;
            }else{
                break;
            }
        }

        // When all members are positive
        if(index==0) index=1;

        // When all members are negative
        if(index==n) index-=1;

        if(k%2==0 || k==0) return Sum(arr,n);

        if(Math.abs(arr[index])>Math.abs(arr[index-1])){
            index-=1;
        }

        arr[index]*=-1;

        return Sum(arr,n);
    }

    public static int Sum(int arr[], int n){

        int sum = 0;
        for(int i = 0;i<arr.length;i++){
            sum+=arr[i];
        }
        return sum;
    }

    public static void main(String[] args){
        int arr[] = {-2, 0, 5, -1, 2} ;
        int n = arr.length;
        int  K = 4;
        System.out.println(maximizeSum(arr,n,K));
    }
}
