//Longest Subarray Having Count Of 1s One More Than Count Of 0s
// Check if an array is stack sortable

import org.jetbrains.annotations.NotNull;

import java.util.HashMap;
import java.util.HashSet;

public class Main4 {

    public static void Solve(@NotNull int arr[]){

        HashMap<Integer,Integer> map = new HashMap<>();
        int sum=0;
        int max = 0;

        for(int i = 0;i<arr.length;i++){
            if(arr[i]==0){
                sum++;
            }else{
                sum--;
            }

            if(sum==1){
                max=i+1;
            }else if(!map.containsKey(sum)){
                map.put(sum,i);
            }

            if(map.containsKey(sum-1)){
                if(max< i-map.get(sum-1)){
                    max = i-map.get(sum-1);
                }
            }

        }

        System.out.print(max);
    }

    public static void main(String[] args){
        int arr[] = {0,1,1,0,0,1};
        Solve(arr);
    }
}
